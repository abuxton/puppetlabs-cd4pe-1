{
  "description": "Applys the root configuration for Continuous Delivery for PE. Full documentation at https://puppet.com/docs/continuous-delivery/latest/install_module.html",
  "parameters": {
    "resolvable_hostname": {
      "type": "Optional[String[1]]",
      "description": "A resolvable internet address where the Continuous Delivery for PE server can be reached. Required only if the agent certificate is not the machine's resolvable internet address."
    },
    "root_email": {
      "type": "String",
      "description": "The email address to associate with the root account."
    },
    "root_password": {
      "type": "String",
      "sensitive": true,
      "description": "The password to associate with the root account."
    },
    "generate_trial_license": {
      "type": "Optional[Boolean]",
      "description": "Boolean to define whether to create a trial license."
    },
     "web_ui_endpoint": {
      "type": "Optional[String[1]]",
      "description": "The endpoint where the web UI can be reached, in the form http://<resolvable_hostname>:<port>. Required if you set the web_ui_port parameter in the cd4pe class during installation."
    },
    "backend_service_endpoint": {
      "type": "Optional[String[1]]",
      "description": "The endpoint where the back end service can be reached, in the form http://<resolvable_hostname>:<port>. Required if you set the backend_service_port parameter in the cd4pe class during installation."
    },
    "agent_service_endpoint": {
      "type": "Optional[String[1]]",
      "description": "The endpoint where the agent service can be reached, in the form http://<resolvable_hostname>:<port>. Required if you set the agent_service_port parameter in the cd4pe class during installation."
    },
    "storage_provider": {
      "type": "Optional[String[1]]",
      "description": "Which object store provider to use. Must be one of: DISK, ARTIFACTORY or S3. Defaults to DISK."
    },
    "storage_endpoint": {
      "type": "Optional[String[1]]",
      "description": "The URL of the storage provider. Required if using Amazon S3 or Artifactory for object storage."
    },
    "storage_bucket": {
      "type": "Optional[String[1]]",
      "description": "The name of the bucket used for object storage. Required if using Amazon S3 or Artifactory for object storage."
    },
    "storage_prefix": {
      "type": "Optional[String[1]]",
      "description": "For Amazon S3: the subdirectory of the bucket to use. For Artifactory: the top level of the Artifactory instance."
    },
    "s3_access_key": {
      "type": "Optional[String[1]]",
      "description": "The AWS access key that has access to the bucket. Required if using Amazon S3."
    },
    "s3_secret_key": {
      "type": "Optional[String[1]]",
      "sensitive": true,
      "description": "The AWS secret key that has access to the bucket. Required if using Amazon S3."
    },
    "artifactory_access_token": {
      "type": "Optional[String[1]]",
      "sensitive": true,
      "description": "API token for your Artifactory instance. Required if using Artifactory."
    },
    "ssl_enabled": {
      "type": "Optional[Boolean]",
      "description": "Boolean to enable or disable SSL."
    },
    "ssl_server_certificate": {
      "type": "Optional[String[1]]",
      "description": "Server Certificate for your SSL configuration. Required if SSL is enabled."
    },
    "ssl_authority_certificate": {
      "type": "Optional[String[1]]",
      "description": "Authority Certificate for your SSL configuration. Required if SSL is enabled."
    },
    "ssl_server_private_key": {
      "type": "Optional[String[1]]",
      "sensitive" :true,
      "description": "Server Private Key for your SSL configuration. Required if SSL is enabled."
    },
    "ssl_endpoint": {
      "type": "Optional[String[1]]",
      "description": "SSL Web UI endpoint. Required if SSL is enabled."
    },
    "ssl_port": {
      "type": "Optional[Integer]",
      "description": "SSL Web UI port. Required if SSL is enabled."
    }
  },
  "files": ["cd4pe/lib/"],
  "input_method": "stdin"
}
